{"name": "test_002", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <case.test_003_MarketBuy.TestMarketBuy object at 0x0000025E4A41D688>\n\n    def test_002(self):\n        '''获取图文列表'''\n        time.sleep(3)\n        r = self.obj.web_get(row=4,params=self.jsda.getRequestsData(4),headers=getHeadersInfo())\n>       mylog.info('result：%s' % r.json())\n\ncase\\test_003_MarketBuy.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nd:\\python37\\lib\\site-packages\\requests\\models.py:897: in json\n    return complexjson.loads(self.text, **kwargs)\nd:\\python37\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nd:\\python37\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000025E48EEBD48>\ns = '<!DOCTYPE html>\\n<html>\\n<head>\\n        <meta charset=\"UTF-8\">\\n        <meta name=\"renderer\" content=\"webkit\">\\n   ...atic-resource.xiaoeknow.com/b_static/login/chooseShop/index.js?id=10013&amp;app_id=\"></script>\\n    </body>\\n\\n</html>'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nd:\\python37\\lib\\json\\decoder.py:355: JSONDecodeError"}, "description": "获取图文列表", "attachments": [{"name": "log", "source": "388ce7ae-0116-4952-9818-0ec275255ce1-attachment.txt", "type": "text/plain"}], "start": 1589275341080, "stop": 1589275345053, "uuid": "fc3e71d3-d6c0-44b0-863a-8cfbc66031cc", "historyId": "938f4def372d6ef81d087d82a53daa4b", "testCaseId": "3f17db2e990174f13bab094b54430503", "fullName": "case.test_003_MarketBuy.TestMarketBuy#test_002", "labels": [{"name": "parentSuite", "value": "case"}, {"name": "suite", "value": "test_003_MarketBuy"}, {"name": "subSuite", "value": "TestMarketBuy"}, {"name": "host", "value": "DESKTOP-HF05572"}, {"name": "thread", "value": "23452-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.test_003_MarketBuy"}]}